/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Fields in Usage Summary by tag(s).
*/
export class UsageAttributionValues {
    /**
    * The percentage of synthetic API test usage by tag(s).
    */
    'apiPercentage'?: number;
    /**
    * The synthetic API test usage by tag(s).
    */
    'apiUsage'?: number;
    /**
    * The percentage of APM host usage by tag(s).
    */
    'apmHostPercentage'?: number;
    /**
    * The APM host usage by tag(s).
    */
    'apmHostUsage'?: number;
    /**
    * The percentage of synthetic browser test usage by tag(s).
    */
    'browserPercentage'?: number;
    /**
    * The synthetic browser test usage by tag(s).
    */
    'browserUsage'?: number;
    /**
    * The percentage of container usage by tag(s).
    */
    'containerPercentage'?: number;
    /**
    * The container usage by tag(s).
    */
    'containerUsage'?: number;
    /**
    * The percentage of custom metrics usage by tag(s).
    */
    'customTimeseriesPercentage'?: number;
    /**
    * The custom metrics usage by tag(s).
    */
    'customTimeseriesUsage'?: number;
    /**
    * The percentage of infrastructure host usage by tag(s).
    */
    'infraHostPercentage'?: number;
    /**
    * The infrastructure host usage by tag(s).
    */
    'infraHostUsage'?: number;
    /**
    * The percentage of Lambda function usage by tag(s).
    */
    'lambdaFunctionsPercentage'?: number;
    /**
    * The Lambda function usage by tag(s).
    */
    'lambdaFunctionsUsage'?: number;
    /**
    * The percentage of Lambda invocation usage by tag(s).
    */
    'lambdaInvocationsPercentage'?: number;
    /**
    * The Lambda invocation usage by tag(s).
    */
    'lambdaInvocationsUsage'?: number;
    /**
    * The percentage of Lambda function usage by tag(s).  **Note** this field is deprecated. Use lambda_functions_percentage instead.
    */
    'lambdaPercentage'?: number;
    /**
    * The Lambda function usage by tag(s).  **Note** this field is deprecated. Use lambda_functions_usage instead.
    */
    'lambdaUsage'?: number;
    /**
    * The percentage of network host usage by tag(s).
    */
    'npmHostPercentage'?: number;
    /**
    * The network host usage by tag(s).
    */
    'npmHostUsage'?: number;
    /**
    * The percentage of network device usage by tag(s).
    */
    'snmpPercentage'?: number;
    /**
    * The network device usage by tag(s).
    */
    'snmpUsage'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "apiPercentage",
            "baseName": "api_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "apiUsage",
            "baseName": "api_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "apmHostPercentage",
            "baseName": "apm_host_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "apmHostUsage",
            "baseName": "apm_host_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "browserPercentage",
            "baseName": "browser_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "browserUsage",
            "baseName": "browser_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "containerPercentage",
            "baseName": "container_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "containerUsage",
            "baseName": "container_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "customTimeseriesPercentage",
            "baseName": "custom_timeseries_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "customTimeseriesUsage",
            "baseName": "custom_timeseries_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "infraHostPercentage",
            "baseName": "infra_host_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "infraHostUsage",
            "baseName": "infra_host_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "lambdaFunctionsPercentage",
            "baseName": "lambda_functions_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "lambdaFunctionsUsage",
            "baseName": "lambda_functions_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "lambdaInvocationsPercentage",
            "baseName": "lambda_invocations_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "lambdaInvocationsUsage",
            "baseName": "lambda_invocations_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "lambdaPercentage",
            "baseName": "lambda_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "lambdaUsage",
            "baseName": "lambda_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "npmHostPercentage",
            "baseName": "npm_host_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "npmHostUsage",
            "baseName": "npm_host_usage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "snmpPercentage",
            "baseName": "snmp_percentage",
            "type": "number",
            "format": "double"
        },
        {
            "name": "snmpUsage",
            "baseName": "snmp_usage",
            "type": "number",
            "format": "double"
        }    ];

    static getAttributeTypeMap() {
        return UsageAttributionValues.attributeTypeMap;
    }
    
    public constructor() {
    }
}

