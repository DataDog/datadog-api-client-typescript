/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LogsAttributeRemapperType } from './LogsAttributeRemapperType';
import { TargetFormatType } from './TargetFormatType';
import { HttpFile } from '../http/http';

/**
* The remapper processor remaps any source attribute(s) or tag to another target attribute or tag. Constraints on the tag/attribute name are explained in the [Tag Best Practice documentation](https://docs.datadoghq.com/logs/guide/log-parsing-best-practice). Some additional constraints are applied as `:` or `,` are not allowed in the target tag/attribute name.
*/
export class LogsAttributeRemapper {
    /**
    * Whether or not the processor is enabled.
    */
    'isEnabled'?: boolean;
    /**
    * Name of the processor.
    */
    'name'?: string;
    /**
    * Override or not the target element if already set,
    */
    'overrideOnConflict'?: boolean;
    /**
    * Remove or preserve the remapped source element.
    */
    'preserveSource'?: boolean;
    /**
    * Defines if the sources are from log `attribute` or `tag`.
    */
    'sourceType'?: string;
    /**
    * Array of source attributes.
    */
    'sources': Array<string>;
    /**
    * Final attribute or tag name to remap the sources to.
    */
    'target': string;
    'targetFormat'?: TargetFormatType;
    /**
    * Defines if the final attribute or tag name is from log `attribute` or `tag`.
    */
    'targetType'?: string;
    'type': LogsAttributeRemapperType;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "isEnabled",
            "baseName": "is_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "overrideOnConflict",
            "baseName": "override_on_conflict",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "preserveSource",
            "baseName": "preserve_source",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "sourceType",
            "baseName": "source_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "sources",
            "baseName": "sources",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "target",
            "baseName": "target",
            "type": "string",
            "format": ""
        },
        {
            "name": "targetFormat",
            "baseName": "target_format",
            "type": "TargetFormatType",
            "format": ""
        },
        {
            "name": "targetType",
            "baseName": "target_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "LogsAttributeRemapperType",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LogsAttributeRemapper.attributeTypeMap;
    }
    
    public constructor() {
    }
}

