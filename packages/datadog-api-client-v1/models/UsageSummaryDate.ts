/**
 * Datadog API V1 Collection
 * Collection of all Datadog Public endpoints.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@datadoghq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { UsageSummaryDateOrg } from './UsageSummaryDateOrg';
import { HttpFile } from '../http/http';

/**
* Response with hourly report of all data billed by Datadog all organizations.
*/
export class UsageSummaryDate {
    /**
    * Shows the 99th percentile of all agent hosts over all hours in the current date for all organizations.
    */
    'agentHostTop99p'?: number;
    /**
    * Shows the 99th percentile of all Azure app services using APM over all hours in the current date all organizations.
    */
    'apmAzureAppServiceHostTop99p'?: number;
    /**
    * Shows the 99th percentile of all distinct APM hosts over all hours in the current date for all organizations.
    */
    'apmHostTop99p'?: number;
    /**
    * Shows the 99th percentile of all AWS hosts over all hours in the current date for all organizations.
    */
    'awsHostTop99p'?: number;
    /**
    * Shows the average of the number of functions that executed 1 or more times each hour in the current date for all organizations.
    */
    'awsLambdaFuncCount'?: number;
    /**
    * Shows the sum of all AWS Lambda invocations over all hours in the current date for all organizations.
    */
    'awsLambdaInvocationsSum'?: number;
    /**
    * Shows the 99th percentile of all Azure app services over all hours in the current date for all organizations.
    */
    'azureAppServiceTop99p'?: number;
    /**
    * Shows the sum of all log bytes ingested over all hours in the current date for all organizations.
    */
    'billableIngestedBytesSum'?: number;
    /**
    * Shows the average of all distinct containers over all hours in the current date for all organizations.
    */
    'containerAvg'?: number;
    /**
    * Shows the high-water mark of all distinct containers over all hours in the current date for all organizations.
    */
    'containerHwm'?: number;
    /**
    * Shows the average number of distinct custom metrics over all hours in the current date for all organizations.
    */
    'customTsAvg'?: number;
    /**
    * The date for the usage.
    */
    'date'?: Date;
    /**
    * Shows the high-watermark of all Fargate tasks over all hours in the current date for all organizations.
    */
    'fargateTasksCountAvg'?: number;
    /**
    * Shows the average of all Fargate tasks over all hours in the current date for all organizations.
    */
    'fargateTasksCountHwm'?: number;
    /**
    * Shows the 99th percentile of all GCP hosts over all hours in the current date for all organizations.
    */
    'gcpHostTop99p'?: number;
    /**
    * Shows the high-water mark of incident management monthly active users over all hours in the current date for all organizations.
    */
    'incidentManagementMonthlyActiveUsersHwm'?: number;
    /**
    * Shows the sum of all log events indexed over all hours in the current date for all organizations.
    */
    'indexedEventsCountSum'?: number;
    /**
    * Shows the 99th percentile of all distinct infrastructure hosts over all hours in the current date for all organizations.
    */
    'infraHostTop99p'?: number;
    /**
    * Shows the sum of all log bytes ingested over all hours in the current date for all organizations.
    */
    'ingestedEventsBytesSum'?: number;
    /**
    * Shows the sum of all IoT devices over all hours in the current date for all organizations.
    */
    'iotDeviceAggSum'?: number;
    /**
    * Shows the 99th percentile of all IoT devices over all hours in the current date all organizations.
    */
    'iotDeviceTop99pSum'?: number;
    /**
    * Shows the sum of all mobile RUM Sessions on Android over all hours in the current date for all organizations.
    */
    'mobileRumSessionCountAndroidSum'?: number;
    /**
    * Shows the sum of all mobile RUM Sessions on iOS over all hours in the current date for all organizations.
    */
    'mobileRumSessionCountIosSum'?: number;
    /**
    * Shows the sum of all mobile RUM Sessions over all hours in the current date for all organizations
    */
    'mobileRumSessionCountSum'?: number;
    /**
    * Shows the sum of all Network flows indexed over all hours in the current date for all organizations.
    */
    'netflowIndexedEventsCountSum'?: number;
    /**
    * Shows the 99th percentile of all distinct Networks hosts over all hours in the current date for all organizations.
    */
    'npmHostTop99p'?: number;
    /**
    * Organizations associated with a user.
    */
    'orgs'?: Array<UsageSummaryDateOrg>;
    /**
    * Shows the 99th percentile of all profiled hosts over all hours in the current date for all organizations.
    */
    'profilingHostTop99p'?: number;
    /**
    * Shows the sum of all browser RUM Sessions over all hours in the current date for all organizations
    */
    'rumSessionCountSum'?: number;
    /**
    * Shows the sum of RUM Sessions (browser and mobile) over all hours in the current date for all organizations.
    */
    'rumTotalSessionCountSum'?: number;
    /**
    * Shows the sum of all Synthetic browser tests over all hours in the current date for all organizations.
    */
    'syntheticsBrowserCheckCallsCountSum'?: number;
    /**
    * Shows the sum of all Synthetic API tests over all hours in the current date for all organizations.
    */
    'syntheticsCheckCallsCountSum'?: number;
    /**
    * Shows the sum of all Indexed Spans indexed over all hours in the current date for all organizations.
    */
    'traceSearchIndexedEventsCountSum'?: number;
    /**
    * Shows the sum of all tracing without limits bytes ingested over all hours in the current date for all organizations.
    */
    'twolIngestedEventsBytesSum'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "agentHostTop99p",
            "baseName": "agent_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "apmAzureAppServiceHostTop99p",
            "baseName": "apm_azure_app_service_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "apmHostTop99p",
            "baseName": "apm_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "awsHostTop99p",
            "baseName": "aws_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "awsLambdaFuncCount",
            "baseName": "aws_lambda_func_count",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "awsLambdaInvocationsSum",
            "baseName": "aws_lambda_invocations_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "azureAppServiceTop99p",
            "baseName": "azure_app_service_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "billableIngestedBytesSum",
            "baseName": "billable_ingested_bytes_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "containerAvg",
            "baseName": "container_avg",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "containerHwm",
            "baseName": "container_hwm",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "customTsAvg",
            "baseName": "custom_ts_avg",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "fargateTasksCountAvg",
            "baseName": "fargate_tasks_count_avg",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "fargateTasksCountHwm",
            "baseName": "fargate_tasks_count_hwm",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "gcpHostTop99p",
            "baseName": "gcp_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "incidentManagementMonthlyActiveUsersHwm",
            "baseName": "incident_management_monthly_active_users_hwm",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "indexedEventsCountSum",
            "baseName": "indexed_events_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "infraHostTop99p",
            "baseName": "infra_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "ingestedEventsBytesSum",
            "baseName": "ingested_events_bytes_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "iotDeviceAggSum",
            "baseName": "iot_device_agg_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "iotDeviceTop99pSum",
            "baseName": "iot_device_top99p_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "mobileRumSessionCountAndroidSum",
            "baseName": "mobile_rum_session_count_android_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "mobileRumSessionCountIosSum",
            "baseName": "mobile_rum_session_count_ios_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "mobileRumSessionCountSum",
            "baseName": "mobile_rum_session_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "netflowIndexedEventsCountSum",
            "baseName": "netflow_indexed_events_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "npmHostTop99p",
            "baseName": "npm_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "orgs",
            "baseName": "orgs",
            "type": "Array<UsageSummaryDateOrg>",
            "format": ""
        },
        {
            "name": "profilingHostTop99p",
            "baseName": "profiling_host_top99p",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "rumSessionCountSum",
            "baseName": "rum_session_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "rumTotalSessionCountSum",
            "baseName": "rum_total_session_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "syntheticsBrowserCheckCallsCountSum",
            "baseName": "synthetics_browser_check_calls_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "syntheticsCheckCallsCountSum",
            "baseName": "synthetics_check_calls_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "traceSearchIndexedEventsCountSum",
            "baseName": "trace_search_indexed_events_count_sum",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "twolIngestedEventsBytesSum",
            "baseName": "twol_ingested_events_bytes_sum",
            "type": "number",
            "format": "int64"
        }    ];

    static getAttributeTypeMap() {
        return UsageSummaryDate.attributeTypeMap;
    }
    
    public constructor() {
    }
}

