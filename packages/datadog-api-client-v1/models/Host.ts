/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HostMeta } from './HostMeta';
import { HostMetrics } from './HostMetrics';
import { HttpFile } from '../http/http';

/**
* Object representing a host.
*/
export class Host {
    /**
    * Host aliases collected by Datadog.
    */
    'aliases'?: Array<string>;
    /**
    * The Datadog integrations reporting metrics for the host.
    */
    'apps'?: Array<string>;
    /**
    * AWS name of your host.
    */
    'awsName'?: string;
    /**
    * The host name.
    */
    'hostName'?: string;
    /**
    * The host ID.
    */
    'id'?: number;
    /**
    * If a host is muted or unmuted.
    */
    'isMuted'?: boolean;
    /**
    * Last time the host reported a metric data point.
    */
    'lastReportedTime'?: number;
    'meta'?: HostMeta;
    'metrics'?: HostMetrics;
    /**
    * Timeout of the mute applied to your host.
    */
    'muteTimeout'?: number;
    /**
    * The host name.
    */
    'name'?: string;
    /**
    * Source or cloud provider associated with your host.
    */
    'sources'?: Array<string>;
    /**
    * List of tags for each source (AWS, Datadog Agent, Chef..).
    */
    'tagsBySource'?: { [key: string]: Array<string>; };
    /**
    * Displays UP when the expected metrics are received and displays `???` if no metrics are received.
    */
    'up'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "aliases",
            "baseName": "aliases",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "apps",
            "baseName": "apps",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "awsName",
            "baseName": "aws_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "hostName",
            "baseName": "host_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "isMuted",
            "baseName": "is_muted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "lastReportedTime",
            "baseName": "last_reported_time",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "meta",
            "baseName": "meta",
            "type": "HostMeta",
            "format": ""
        },
        {
            "name": "metrics",
            "baseName": "metrics",
            "type": "HostMetrics",
            "format": ""
        },
        {
            "name": "muteTimeout",
            "baseName": "mute_timeout",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "sources",
            "baseName": "sources",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "tagsBySource",
            "baseName": "tags_by_source",
            "type": "{ [key: string]: Array<string>; }",
            "format": ""
        },
        {
            "name": "up",
            "baseName": "up",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Host.attributeTypeMap;
    }
    
    public constructor() {
    }
}

