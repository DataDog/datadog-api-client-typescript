/**
 * Datadog API V1 Collection
 * Collection of all Datadog Public endpoints.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@datadoghq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ScatterPlotWidgetDefinitionRequests } from './ScatterPlotWidgetDefinitionRequests';
import { ScatterPlotWidgetDefinitionType } from './ScatterPlotWidgetDefinitionType';
import { WidgetAxis } from './WidgetAxis';
import { WidgetCustomLink } from './WidgetCustomLink';
import { WidgetTextAlign } from './WidgetTextAlign';
import { WidgetTime } from './WidgetTime';
import { HttpFile } from '../http/http';

/**
* The scatter plot visualization allows you to graph a chosen scope over two different metrics with their respective aggregation.
*/
export class ScatterPlotWidgetDefinition {
    /**
    * List of groups used for colors.
    */
    'colorByGroups'?: Array<string>;
    /**
    * List of custom links.
    */
    'customLinks'?: Array<WidgetCustomLink>;
    'requests': ScatterPlotWidgetDefinitionRequests;
    'time'?: WidgetTime;
    /**
    * Title of your widget.
    */
    'title'?: string;
    'titleAlign'?: WidgetTextAlign;
    /**
    * Size of the title.
    */
    'titleSize'?: string;
    'type': ScatterPlotWidgetDefinitionType;
    'xaxis'?: WidgetAxis;
    'yaxis'?: WidgetAxis;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "colorByGroups",
            "baseName": "color_by_groups",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "customLinks",
            "baseName": "custom_links",
            "type": "Array<WidgetCustomLink>",
            "format": ""
        },
        {
            "name": "requests",
            "baseName": "requests",
            "type": "ScatterPlotWidgetDefinitionRequests",
            "format": ""
        },
        {
            "name": "time",
            "baseName": "time",
            "type": "WidgetTime",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        },
        {
            "name": "titleAlign",
            "baseName": "title_align",
            "type": "WidgetTextAlign",
            "format": ""
        },
        {
            "name": "titleSize",
            "baseName": "title_size",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "ScatterPlotWidgetDefinitionType",
            "format": ""
        },
        {
            "name": "xaxis",
            "baseName": "xaxis",
            "type": "WidgetAxis",
            "format": ""
        },
        {
            "name": "yaxis",
            "baseName": "yaxis",
            "type": "WidgetAxis",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ScatterPlotWidgetDefinition.attributeTypeMap;
    }
    
    public constructor() {
    }
}

