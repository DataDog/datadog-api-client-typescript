/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SyntheticsBasicAuth } from './SyntheticsBasicAuth';
import { SyntheticsCITestMetadata } from './SyntheticsCITestMetadata';
import { SyntheticsDeviceID } from './SyntheticsDeviceID';
import { SyntheticsTestOptionsRetry } from './SyntheticsTestOptionsRetry';
import { HttpFile } from '../http/http';

/**
* Test configuration for Synthetics CI
*/
export class SyntheticsCITest {
    /**
    * Disable certificate checks in API tests.
    */
    'allowInsecureCertificates'?: boolean;
    'basicAuth'?: SyntheticsBasicAuth;
    /**
    * Body to include in the test.
    */
    'body'?: string;
    /**
    * Type of the data sent in a synthetics API test.
    */
    'bodyType'?: string;
    /**
    * Cookies for the request.
    */
    'cookies'?: string;
    /**
    * For browser test, array with the different device IDs used to run the test.
    */
    'deviceIds'?: Array<SyntheticsDeviceID>;
    /**
    * For API HTTP test, whether or not the test should follow redirects.
    */
    'followRedirects'?: boolean;
    /**
    * Headers to include when performing the test.
    */
    'headers'?: { [key: string]: string; };
    /**
    * Array of locations used to run the test.
    */
    'locations'?: Array<string>;
    'metadata'?: SyntheticsCITestMetadata;
    /**
    * The public ID of the Synthetics test to trigger.
    */
    'publicId': string;
    'retry'?: SyntheticsTestOptionsRetry;
    /**
    * Starting URL for the browser test.
    */
    'startUrl'?: string;
    /**
    * Variables to replace in the test.
    */
    'variables'?: { [key: string]: string; };

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "allowInsecureCertificates",
            "baseName": "allowInsecureCertificates",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "basicAuth",
            "baseName": "basicAuth",
            "type": "SyntheticsBasicAuth",
            "format": ""
        },
        {
            "name": "body",
            "baseName": "body",
            "type": "string",
            "format": ""
        },
        {
            "name": "bodyType",
            "baseName": "bodyType",
            "type": "string",
            "format": ""
        },
        {
            "name": "cookies",
            "baseName": "cookies",
            "type": "string",
            "format": ""
        },
        {
            "name": "deviceIds",
            "baseName": "deviceIds",
            "type": "Array<SyntheticsDeviceID>",
            "format": ""
        },
        {
            "name": "followRedirects",
            "baseName": "followRedirects",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "headers",
            "baseName": "headers",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "locations",
            "baseName": "locations",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "SyntheticsCITestMetadata",
            "format": ""
        },
        {
            "name": "publicId",
            "baseName": "public_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "retry",
            "baseName": "retry",
            "type": "SyntheticsTestOptionsRetry",
            "format": ""
        },
        {
            "name": "startUrl",
            "baseName": "startUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "variables",
            "baseName": "variables",
            "type": "{ [key: string]: string; }",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SyntheticsCITest.attributeTypeMap;
    }
    
    public constructor() {
    }
}

