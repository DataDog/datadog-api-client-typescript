/**
 * Datadog API V1 Collection
 * Collection of all Datadog Public endpoints.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@datadoghq.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LogsGrokParserRules } from './LogsGrokParserRules';
import { LogsGrokParserType } from './LogsGrokParserType';
import { HttpFile } from '../http/http';

/**
* Create custom grok rules to parse the full message or [a specific attribute of your raw event](https://docs.datadoghq.com/logs/processing/parsing/#advanced-settings). For more information, see the [parsing section](https://docs.datadoghq.com/logs/processing/parsing).
*/
export class LogsGrokParser {
    'grok': LogsGrokParserRules;
    /**
    * Whether or not the processor is enabled.
    */
    'isEnabled'?: boolean;
    /**
    * Name of the processor.
    */
    'name'?: string;
    /**
    * List of sample logs to test this grok parser.
    */
    'samples'?: Array<string>;
    /**
    * Name of the log attribute to parse.
    */
    'source': string;
    'type': LogsGrokParserType;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "grok",
            "baseName": "grok",
            "type": "LogsGrokParserRules",
            "format": ""
        },
        {
            "name": "isEnabled",
            "baseName": "is_enabled",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "samples",
            "baseName": "samples",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "LogsGrokParserType",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LogsGrokParser.attributeTypeMap;
    }
    
    public constructor() {
    }
}

