/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LogsByRetention } from "./LogsByRetention";
import { UsageSummaryDate } from "./UsageSummaryDate";
import { ObjectSerializer } from "./ObjectSerializer";

/**
 * Response summarizing all usage aggregated across the months in the request for all organizations, and broken down by month and by organization.
 */

export class UsageSummaryResponse {
  /**
   * Shows the 99th percentile of all agent hosts over all hours in the current months for all organizations.
   */
  "agentHostTop99pSum"?: number;
  /**
   * Shows the 99th percentile of all Azure app services using APM over all hours in the current months all organizations.
   */
  "apmAzureAppServiceHostTop99pSum"?: number;
  /**
   * Shows the 99th percentile of all distinct APM hosts over all hours in the current months for all organizations.
   */
  "apmHostTop99pSum"?: number;
  /**
   * Shows the sum of all audit logs lines indexed over all hours in the current months for all organizations.
   */
  "auditLogsLinesIndexedAggSum"?: number;
  /**
   * Shows the 99th percentile of all AWS hosts over all hours in the current months for all organizations.
   */
  "awsHostTop99pSum"?: number;
  /**
   * Shows the average of the number of functions that executed 1 or more times each hour in the current months for all organizations.
   */
  "awsLambdaFuncCount"?: number;
  /**
   * Shows the sum of all AWS Lambda invocations over all hours in the current months for all organizations.
   */
  "awsLambdaInvocationsSum"?: number;
  /**
   * Shows the 99th percentile of all Azure app services over all hours in the current months for all organizations.
   */
  "azureAppServiceTop99pSum"?: number;
  /**
   * Shows the 99th percentile of all Azure hosts over all hours in the current months for all organizations.
   */
  "azureHostTop99pSum"?: number;
  /**
   * Shows the sum of all log bytes ingested over all hours in the current months for all organizations.
   */
  "billableIngestedBytesAggSum"?: number;
  /**
   * Shows the average of all distinct containers over all hours in the current months for all organizations.
   */
  "containerAvgSum"?: number;
  /**
   * Shows the sum of the high-water marks of all distinct containers over all hours in the current months for all organizations.
   */
  "containerHwmSum"?: number;
  /**
   * Shows the average number of Cloud Security Posture Management containers over all hours in the current months for all organizations.
   */
  "cspmContainerAvgSum"?: number;
  /**
   * Shows the sum of the the high-water marks of Cloud Security Posture Management containers over all hours in the current months for all organizations.
   */
  "cspmContainerHwmSum"?: number;
  /**
   * Shows the 99th percentile of all Cloud Security Posture Management hosts over all hours in the current months for all organizations.
   */
  "cspmHostTop99pSum"?: number;
  /**
   * Shows the average number of distinct custom metrics over all hours in the current months for all organizations.
   */
  "customTsSum"?: number;
  /**
   * Shows the average of all distinct Cloud Workload Security containers over all hours in the current months for all organizations.
   */
  "cwsContainersAvgSum"?: number;
  /**
   * Shows the 99th percentile of all Cloud Workload Security hosts over all hours in the current months for all organizations.
   */
  "cwsHostTop99pSum"?: number;
  /**
   * Shows the 99th percentile of all Database Monitoring hosts over all hours in the current month for all organizations.
   */
  "dbmHostTop99pSum"?: number;
  /**
   * Shows the average of all distinct Database Monitoring Normalized Queries over all hours in the current month for all organizations.
   */
  "dbmQueriesAvgSum"?: number;
  /**
   * Shows the last date of usage in the current months for all organizations.
   */
  "endDate"?: Date;
  /**
   * Shows the average of all Fargate tasks over all hours in the current months for all organizations.
   */
  "fargateTasksCountAvgSum"?: number;
  /**
   * Shows the sum of the high-water marks of all Fargate tasks over all hours in the current months for all organizations.
   */
  "fargateTasksCountHwmSum"?: number;
  /**
   * Shows the 99th percentile of all GCP hosts over all hours in the current months for all organizations.
   */
  "gcpHostTop99pSum"?: number;
  /**
   * Shows the 99th percentile of all Heroku dynos over all hours in the current months for all organizations.
   */
  "herokuHostTop99pSum"?: number;
  /**
   * Shows sum of the the high-water marks of incident management monthly active users in the current months for all organizations.
   */
  "incidentManagementMonthlyActiveUsersHwmSum"?: number;
  /**
   * Shows the sum of all log events indexed over all hours in the current months for all organizations.
   */
  "indexedEventsCountAggSum"?: number;
  /**
   * Shows the 99th percentile of all distinct infrastructure hosts over all hours in the current months for all organizations.
   */
  "infraHostTop99pSum"?: number;
  /**
   * Shows the sum of all log bytes ingested over all hours in the current months for all organizations.
   */
  "ingestedEventsBytesAggSum"?: number;
  /**
   * Shows the sum of all IoT devices over all hours in the current months for all organizations.
   */
  "iotDeviceAggSum"?: number;
  /**
   * Shows the 99th percentile of all IoT devices over all hours in the current months of all organizations.
   */
  "iotDeviceTop99pSum"?: number;
  /**
   * Shows the the most recent hour in the current months for all organizations for which all usages were calculated.
   */
  "lastUpdated"?: Date;
  /**
   * Shows the sum of all live logs indexed over all hours in the current months for all organizations (data available as of December 1, 2020).
   */
  "liveIndexedEventsAggSum"?: number;
  /**
   * Shows the sum of all live logs bytes ingested over all hours in the current months for all organizations (data available as of December 1, 2020).
   */
  "liveIngestedBytesAggSum"?: number;
  "logsByRetention"?: LogsByRetention;
  /**
   * Shows the sum of all mobile RUM Sessions over all hours in the current months for all organizations.
   */
  "mobileRumSessionCountAggSum"?: number;
  /**
   * Shows the sum of all mobile RUM Sessions on Android over all hours in the current months for all organizations.
   */
  "mobileRumSessionCountAndroidAggSum"?: number;
  /**
   * Shows the sum of all mobile RUM Sessions on iOS over all hours in the current months for all organizations.
   */
  "mobileRumSessionCountIosAggSum"?: number;
  /**
   * Shows the sum of all Network flows indexed over all hours in the current months for all organizations.
   */
  "netflowIndexedEventsCountAggSum"?: number;
  /**
   * Shows the 99th percentile of all distinct Networks hosts over all hours in the current months for all organizations.
   */
  "npmHostTop99pSum"?: number;
  /**
   * Shows the 99th percentile of all hosts reported by the Datadog exporter for the OpenTelemetry Collector over all hours in the current months for all organizations.
   */
  "opentelemetryHostTop99pSum"?: number;
  /**
   * Shows the average number of profiled containers over all hours in the current months for all organizations.
   */
  "profilingContainerAgentCountAvg"?: number;
  /**
   * Shows the 99th percentile of all profiled hosts over all hours in the current months for all organizations.
   */
  "profilingHostCountTop99pSum"?: number;
  /**
   * Shows the sum of all rehydrated logs indexed over all hours in the current months for all organizations (data available as of December 1, 2020).
   */
  "rehydratedIndexedEventsAggSum"?: number;
  /**
   * Shows the sum of all rehydrated logs bytes ingested over all hours in the current months for all organizations (data available as of December 1, 2020).
   */
  "rehydratedIngestedBytesAggSum"?: number;
  /**
   * Shows the sum of all browser RUM Sessions over all hours in the current months for all organizations.
   */
  "rumSessionCountAggSum"?: number;
  /**
   * Shows the sum of RUM Sessions (browser and mobile) over all hours in the current months for all organizations.
   */
  "rumTotalSessionCountAggSum"?: number;
  /**
   * Shows the first date of usage in the current months for all organizations.
   */
  "startDate"?: Date;
  /**
   * Shows the sum of all Synthetic browser tests over all hours in the current months for all organizations.
   */
  "syntheticsBrowserCheckCallsCountAggSum"?: number;
  /**
   * Shows the sum of all Synthetic API tests over all hours in the current months for all organizations.
   */
  "syntheticsCheckCallsCountAggSum"?: number;
  /**
   * Shows the sum of all Indexed Spans indexed over all hours in the current months for all organizations.
   */
  "traceSearchIndexedEventsCountAggSum"?: number;
  /**
   * Shows the sum of all tracing without limits bytes ingested over all hours in the current months for all organizations.
   */
  "twolIngestedEventsBytesAggSum"?: number;
  /**
   * An array of objects regarding hourly usage.
   */
  "usage"?: Array<UsageSummaryDate>;
  /**
   * Shows the 99th percentile of all vSphere hosts over all hours in the current months for all organizations.
   */
  "vsphereHostTop99pSum"?: number;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: { baseName: string; type: string; format: string };
  } = {
    agentHostTop99pSum: {
      baseName: "agent_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    apmAzureAppServiceHostTop99pSum: {
      baseName: "apm_azure_app_service_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    apmHostTop99pSum: {
      baseName: "apm_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    auditLogsLinesIndexedAggSum: {
      baseName: "audit_logs_lines_indexed_agg_sum",
      type: "number",
      format: "int64",
    },
    awsHostTop99pSum: {
      baseName: "aws_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    awsLambdaFuncCount: {
      baseName: "aws_lambda_func_count",
      type: "number",
      format: "int64",
    },
    awsLambdaInvocationsSum: {
      baseName: "aws_lambda_invocations_sum",
      type: "number",
      format: "int64",
    },
    azureAppServiceTop99pSum: {
      baseName: "azure_app_service_top99p_sum",
      type: "number",
      format: "int64",
    },
    azureHostTop99pSum: {
      baseName: "azure_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    billableIngestedBytesAggSum: {
      baseName: "billable_ingested_bytes_agg_sum",
      type: "number",
      format: "int64",
    },
    containerAvgSum: {
      baseName: "container_avg_sum",
      type: "number",
      format: "int64",
    },
    containerHwmSum: {
      baseName: "container_hwm_sum",
      type: "number",
      format: "int64",
    },
    cspmContainerAvgSum: {
      baseName: "cspm_container_avg_sum",
      type: "number",
      format: "int64",
    },
    cspmContainerHwmSum: {
      baseName: "cspm_container_hwm_sum",
      type: "number",
      format: "int64",
    },
    cspmHostTop99pSum: {
      baseName: "cspm_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    customTsSum: {
      baseName: "custom_ts_sum",
      type: "number",
      format: "int64",
    },
    cwsContainersAvgSum: {
      baseName: "cws_containers_avg_sum",
      type: "number",
      format: "int64",
    },
    cwsHostTop99pSum: {
      baseName: "cws_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    dbmHostTop99pSum: {
      baseName: "dbm_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    dbmQueriesAvgSum: {
      baseName: "dbm_queries_avg_sum",
      type: "number",
      format: "int64",
    },
    endDate: {
      baseName: "end_date",
      type: "Date",
      format: "date-time",
    },
    fargateTasksCountAvgSum: {
      baseName: "fargate_tasks_count_avg_sum",
      type: "number",
      format: "int64",
    },
    fargateTasksCountHwmSum: {
      baseName: "fargate_tasks_count_hwm_sum",
      type: "number",
      format: "int64",
    },
    gcpHostTop99pSum: {
      baseName: "gcp_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    herokuHostTop99pSum: {
      baseName: "heroku_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    incidentManagementMonthlyActiveUsersHwmSum: {
      baseName: "incident_management_monthly_active_users_hwm_sum",
      type: "number",
      format: "int64",
    },
    indexedEventsCountAggSum: {
      baseName: "indexed_events_count_agg_sum",
      type: "number",
      format: "int64",
    },
    infraHostTop99pSum: {
      baseName: "infra_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    ingestedEventsBytesAggSum: {
      baseName: "ingested_events_bytes_agg_sum",
      type: "number",
      format: "int64",
    },
    iotDeviceAggSum: {
      baseName: "iot_device_agg_sum",
      type: "number",
      format: "int64",
    },
    iotDeviceTop99pSum: {
      baseName: "iot_device_top99p_sum",
      type: "number",
      format: "int64",
    },
    lastUpdated: {
      baseName: "last_updated",
      type: "Date",
      format: "date-time",
    },
    liveIndexedEventsAggSum: {
      baseName: "live_indexed_events_agg_sum",
      type: "number",
      format: "int64",
    },
    liveIngestedBytesAggSum: {
      baseName: "live_ingested_bytes_agg_sum",
      type: "number",
      format: "int64",
    },
    logsByRetention: {
      baseName: "logs_by_retention",
      type: "LogsByRetention",
      format: "",
    },
    mobileRumSessionCountAggSum: {
      baseName: "mobile_rum_session_count_agg_sum",
      type: "number",
      format: "int64",
    },
    mobileRumSessionCountAndroidAggSum: {
      baseName: "mobile_rum_session_count_android_agg_sum",
      type: "number",
      format: "int64",
    },
    mobileRumSessionCountIosAggSum: {
      baseName: "mobile_rum_session_count_ios_agg_sum",
      type: "number",
      format: "int64",
    },
    netflowIndexedEventsCountAggSum: {
      baseName: "netflow_indexed_events_count_agg_sum",
      type: "number",
      format: "int64",
    },
    npmHostTop99pSum: {
      baseName: "npm_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    opentelemetryHostTop99pSum: {
      baseName: "opentelemetry_host_top99p_sum",
      type: "number",
      format: "int64",
    },
    profilingContainerAgentCountAvg: {
      baseName: "profiling_container_agent_count_avg",
      type: "number",
      format: "int64",
    },
    profilingHostCountTop99pSum: {
      baseName: "profiling_host_count_top99p_sum",
      type: "number",
      format: "int64",
    },
    rehydratedIndexedEventsAggSum: {
      baseName: "rehydrated_indexed_events_agg_sum",
      type: "number",
      format: "int64",
    },
    rehydratedIngestedBytesAggSum: {
      baseName: "rehydrated_ingested_bytes_agg_sum",
      type: "number",
      format: "int64",
    },
    rumSessionCountAggSum: {
      baseName: "rum_session_count_agg_sum",
      type: "number",
      format: "int64",
    },
    rumTotalSessionCountAggSum: {
      baseName: "rum_total_session_count_agg_sum",
      type: "number",
      format: "int64",
    },
    startDate: {
      baseName: "start_date",
      type: "Date",
      format: "date-time",
    },
    syntheticsBrowserCheckCallsCountAggSum: {
      baseName: "synthetics_browser_check_calls_count_agg_sum",
      type: "number",
      format: "int64",
    },
    syntheticsCheckCallsCountAggSum: {
      baseName: "synthetics_check_calls_count_agg_sum",
      type: "number",
      format: "int64",
    },
    traceSearchIndexedEventsCountAggSum: {
      baseName: "trace_search_indexed_events_count_agg_sum",
      type: "number",
      format: "int64",
    },
    twolIngestedEventsBytesAggSum: {
      baseName: "twol_ingested_events_bytes_agg_sum",
      type: "number",
      format: "int64",
    },
    usage: {
      baseName: "usage",
      type: "Array<UsageSummaryDate>",
      format: "",
    },
    vsphereHostTop99pSum: {
      baseName: "vsphere_host_top99p_sum",
      type: "number",
      format: "int64",
    },
  };

  static getAttributeTypeMap() {
    return UsageSummaryResponse.attributeTypeMap;
  }

  static deserialize(data: { [key: string]: any }): UsageSummaryResponse {
    const res = new UsageSummaryResponse();

    res.agentHostTop99pSum = ObjectSerializer.deserialize(
      data.agent_host_top99p_sum,
      "number",
      "int64"
    );

    res.apmAzureAppServiceHostTop99pSum = ObjectSerializer.deserialize(
      data.apm_azure_app_service_host_top99p_sum,
      "number",
      "int64"
    );

    res.apmHostTop99pSum = ObjectSerializer.deserialize(
      data.apm_host_top99p_sum,
      "number",
      "int64"
    );

    res.auditLogsLinesIndexedAggSum = ObjectSerializer.deserialize(
      data.audit_logs_lines_indexed_agg_sum,
      "number",
      "int64"
    );

    res.awsHostTop99pSum = ObjectSerializer.deserialize(
      data.aws_host_top99p_sum,
      "number",
      "int64"
    );

    res.awsLambdaFuncCount = ObjectSerializer.deserialize(
      data.aws_lambda_func_count,
      "number",
      "int64"
    );

    res.awsLambdaInvocationsSum = ObjectSerializer.deserialize(
      data.aws_lambda_invocations_sum,
      "number",
      "int64"
    );

    res.azureAppServiceTop99pSum = ObjectSerializer.deserialize(
      data.azure_app_service_top99p_sum,
      "number",
      "int64"
    );

    res.azureHostTop99pSum = ObjectSerializer.deserialize(
      data.azure_host_top99p_sum,
      "number",
      "int64"
    );

    res.billableIngestedBytesAggSum = ObjectSerializer.deserialize(
      data.billable_ingested_bytes_agg_sum,
      "number",
      "int64"
    );

    res.containerAvgSum = ObjectSerializer.deserialize(
      data.container_avg_sum,
      "number",
      "int64"
    );

    res.containerHwmSum = ObjectSerializer.deserialize(
      data.container_hwm_sum,
      "number",
      "int64"
    );

    res.cspmContainerAvgSum = ObjectSerializer.deserialize(
      data.cspm_container_avg_sum,
      "number",
      "int64"
    );

    res.cspmContainerHwmSum = ObjectSerializer.deserialize(
      data.cspm_container_hwm_sum,
      "number",
      "int64"
    );

    res.cspmHostTop99pSum = ObjectSerializer.deserialize(
      data.cspm_host_top99p_sum,
      "number",
      "int64"
    );

    res.customTsSum = ObjectSerializer.deserialize(
      data.custom_ts_sum,
      "number",
      "int64"
    );

    res.cwsContainersAvgSum = ObjectSerializer.deserialize(
      data.cws_containers_avg_sum,
      "number",
      "int64"
    );

    res.cwsHostTop99pSum = ObjectSerializer.deserialize(
      data.cws_host_top99p_sum,
      "number",
      "int64"
    );

    res.dbmHostTop99pSum = ObjectSerializer.deserialize(
      data.dbm_host_top99p_sum,
      "number",
      "int64"
    );

    res.dbmQueriesAvgSum = ObjectSerializer.deserialize(
      data.dbm_queries_avg_sum,
      "number",
      "int64"
    );

    res.endDate = ObjectSerializer.deserialize(
      data.end_date,
      "Date",
      "date-time"
    );

    res.fargateTasksCountAvgSum = ObjectSerializer.deserialize(
      data.fargate_tasks_count_avg_sum,
      "number",
      "int64"
    );

    res.fargateTasksCountHwmSum = ObjectSerializer.deserialize(
      data.fargate_tasks_count_hwm_sum,
      "number",
      "int64"
    );

    res.gcpHostTop99pSum = ObjectSerializer.deserialize(
      data.gcp_host_top99p_sum,
      "number",
      "int64"
    );

    res.herokuHostTop99pSum = ObjectSerializer.deserialize(
      data.heroku_host_top99p_sum,
      "number",
      "int64"
    );

    res.incidentManagementMonthlyActiveUsersHwmSum =
      ObjectSerializer.deserialize(
        data.incident_management_monthly_active_users_hwm_sum,
        "number",
        "int64"
      );

    res.indexedEventsCountAggSum = ObjectSerializer.deserialize(
      data.indexed_events_count_agg_sum,
      "number",
      "int64"
    );

    res.infraHostTop99pSum = ObjectSerializer.deserialize(
      data.infra_host_top99p_sum,
      "number",
      "int64"
    );

    res.ingestedEventsBytesAggSum = ObjectSerializer.deserialize(
      data.ingested_events_bytes_agg_sum,
      "number",
      "int64"
    );

    res.iotDeviceAggSum = ObjectSerializer.deserialize(
      data.iot_device_agg_sum,
      "number",
      "int64"
    );

    res.iotDeviceTop99pSum = ObjectSerializer.deserialize(
      data.iot_device_top99p_sum,
      "number",
      "int64"
    );

    res.lastUpdated = ObjectSerializer.deserialize(
      data.last_updated,
      "Date",
      "date-time"
    );

    res.liveIndexedEventsAggSum = ObjectSerializer.deserialize(
      data.live_indexed_events_agg_sum,
      "number",
      "int64"
    );

    res.liveIngestedBytesAggSum = ObjectSerializer.deserialize(
      data.live_ingested_bytes_agg_sum,
      "number",
      "int64"
    );

    res.logsByRetention = ObjectSerializer.deserialize(
      data.logs_by_retention,
      "LogsByRetention",
      ""
    );

    res.mobileRumSessionCountAggSum = ObjectSerializer.deserialize(
      data.mobile_rum_session_count_agg_sum,
      "number",
      "int64"
    );

    res.mobileRumSessionCountAndroidAggSum = ObjectSerializer.deserialize(
      data.mobile_rum_session_count_android_agg_sum,
      "number",
      "int64"
    );

    res.mobileRumSessionCountIosAggSum = ObjectSerializer.deserialize(
      data.mobile_rum_session_count_ios_agg_sum,
      "number",
      "int64"
    );

    res.netflowIndexedEventsCountAggSum = ObjectSerializer.deserialize(
      data.netflow_indexed_events_count_agg_sum,
      "number",
      "int64"
    );

    res.npmHostTop99pSum = ObjectSerializer.deserialize(
      data.npm_host_top99p_sum,
      "number",
      "int64"
    );

    res.opentelemetryHostTop99pSum = ObjectSerializer.deserialize(
      data.opentelemetry_host_top99p_sum,
      "number",
      "int64"
    );

    res.profilingContainerAgentCountAvg = ObjectSerializer.deserialize(
      data.profiling_container_agent_count_avg,
      "number",
      "int64"
    );

    res.profilingHostCountTop99pSum = ObjectSerializer.deserialize(
      data.profiling_host_count_top99p_sum,
      "number",
      "int64"
    );

    res.rehydratedIndexedEventsAggSum = ObjectSerializer.deserialize(
      data.rehydrated_indexed_events_agg_sum,
      "number",
      "int64"
    );

    res.rehydratedIngestedBytesAggSum = ObjectSerializer.deserialize(
      data.rehydrated_ingested_bytes_agg_sum,
      "number",
      "int64"
    );

    res.rumSessionCountAggSum = ObjectSerializer.deserialize(
      data.rum_session_count_agg_sum,
      "number",
      "int64"
    );

    res.rumTotalSessionCountAggSum = ObjectSerializer.deserialize(
      data.rum_total_session_count_agg_sum,
      "number",
      "int64"
    );

    res.startDate = ObjectSerializer.deserialize(
      data.start_date,
      "Date",
      "date-time"
    );

    res.syntheticsBrowserCheckCallsCountAggSum = ObjectSerializer.deserialize(
      data.synthetics_browser_check_calls_count_agg_sum,
      "number",
      "int64"
    );

    res.syntheticsCheckCallsCountAggSum = ObjectSerializer.deserialize(
      data.synthetics_check_calls_count_agg_sum,
      "number",
      "int64"
    );

    res.traceSearchIndexedEventsCountAggSum = ObjectSerializer.deserialize(
      data.trace_search_indexed_events_count_agg_sum,
      "number",
      "int64"
    );

    res.twolIngestedEventsBytesAggSum = ObjectSerializer.deserialize(
      data.twol_ingested_events_bytes_agg_sum,
      "number",
      "int64"
    );

    res.usage = ObjectSerializer.deserialize(
      data.usage,
      "Array<UsageSummaryDate>",
      ""
    );

    res.vsphereHostTop99pSum = ObjectSerializer.deserialize(
      data.vsphere_host_top99p_sum,
      "number",
      "int64"
    );

    return res;
  }

  static serialize(data: UsageSummaryResponse): { [key: string]: any } {
    const attributeTypes = UsageSummaryResponse.getAttributeTypeMap();
    const res: { [index: string]: any } = {};
    for (const [key, value] of Object.entries(data)) {
      if (!(key in attributeTypes)) {
        throw new TypeError(`${key} attribute not in schema`);
      }
    }
    if (data?.unparsedObject !== undefined) {
      return data.unparsedObject;
    }
    res.agent_host_top99p_sum = ObjectSerializer.serialize(
      data.agentHostTop99pSum,
      "number",
      "int64"
    );

    res.apm_azure_app_service_host_top99p_sum = ObjectSerializer.serialize(
      data.apmAzureAppServiceHostTop99pSum,
      "number",
      "int64"
    );

    res.apm_host_top99p_sum = ObjectSerializer.serialize(
      data.apmHostTop99pSum,
      "number",
      "int64"
    );

    res.audit_logs_lines_indexed_agg_sum = ObjectSerializer.serialize(
      data.auditLogsLinesIndexedAggSum,
      "number",
      "int64"
    );

    res.aws_host_top99p_sum = ObjectSerializer.serialize(
      data.awsHostTop99pSum,
      "number",
      "int64"
    );

    res.aws_lambda_func_count = ObjectSerializer.serialize(
      data.awsLambdaFuncCount,
      "number",
      "int64"
    );

    res.aws_lambda_invocations_sum = ObjectSerializer.serialize(
      data.awsLambdaInvocationsSum,
      "number",
      "int64"
    );

    res.azure_app_service_top99p_sum = ObjectSerializer.serialize(
      data.azureAppServiceTop99pSum,
      "number",
      "int64"
    );

    res.azure_host_top99p_sum = ObjectSerializer.serialize(
      data.azureHostTop99pSum,
      "number",
      "int64"
    );

    res.billable_ingested_bytes_agg_sum = ObjectSerializer.serialize(
      data.billableIngestedBytesAggSum,
      "number",
      "int64"
    );

    res.container_avg_sum = ObjectSerializer.serialize(
      data.containerAvgSum,
      "number",
      "int64"
    );

    res.container_hwm_sum = ObjectSerializer.serialize(
      data.containerHwmSum,
      "number",
      "int64"
    );

    res.cspm_container_avg_sum = ObjectSerializer.serialize(
      data.cspmContainerAvgSum,
      "number",
      "int64"
    );

    res.cspm_container_hwm_sum = ObjectSerializer.serialize(
      data.cspmContainerHwmSum,
      "number",
      "int64"
    );

    res.cspm_host_top99p_sum = ObjectSerializer.serialize(
      data.cspmHostTop99pSum,
      "number",
      "int64"
    );

    res.custom_ts_sum = ObjectSerializer.serialize(
      data.customTsSum,
      "number",
      "int64"
    );

    res.cws_containers_avg_sum = ObjectSerializer.serialize(
      data.cwsContainersAvgSum,
      "number",
      "int64"
    );

    res.cws_host_top99p_sum = ObjectSerializer.serialize(
      data.cwsHostTop99pSum,
      "number",
      "int64"
    );

    res.dbm_host_top99p_sum = ObjectSerializer.serialize(
      data.dbmHostTop99pSum,
      "number",
      "int64"
    );

    res.dbm_queries_avg_sum = ObjectSerializer.serialize(
      data.dbmQueriesAvgSum,
      "number",
      "int64"
    );

    res.end_date = ObjectSerializer.serialize(
      data.endDate,
      "Date",
      "date-time"
    );

    res.fargate_tasks_count_avg_sum = ObjectSerializer.serialize(
      data.fargateTasksCountAvgSum,
      "number",
      "int64"
    );

    res.fargate_tasks_count_hwm_sum = ObjectSerializer.serialize(
      data.fargateTasksCountHwmSum,
      "number",
      "int64"
    );

    res.gcp_host_top99p_sum = ObjectSerializer.serialize(
      data.gcpHostTop99pSum,
      "number",
      "int64"
    );

    res.heroku_host_top99p_sum = ObjectSerializer.serialize(
      data.herokuHostTop99pSum,
      "number",
      "int64"
    );

    res.incident_management_monthly_active_users_hwm_sum =
      ObjectSerializer.serialize(
        data.incidentManagementMonthlyActiveUsersHwmSum,
        "number",
        "int64"
      );

    res.indexed_events_count_agg_sum = ObjectSerializer.serialize(
      data.indexedEventsCountAggSum,
      "number",
      "int64"
    );

    res.infra_host_top99p_sum = ObjectSerializer.serialize(
      data.infraHostTop99pSum,
      "number",
      "int64"
    );

    res.ingested_events_bytes_agg_sum = ObjectSerializer.serialize(
      data.ingestedEventsBytesAggSum,
      "number",
      "int64"
    );

    res.iot_device_agg_sum = ObjectSerializer.serialize(
      data.iotDeviceAggSum,
      "number",
      "int64"
    );

    res.iot_device_top99p_sum = ObjectSerializer.serialize(
      data.iotDeviceTop99pSum,
      "number",
      "int64"
    );

    res.last_updated = ObjectSerializer.serialize(
      data.lastUpdated,
      "Date",
      "date-time"
    );

    res.live_indexed_events_agg_sum = ObjectSerializer.serialize(
      data.liveIndexedEventsAggSum,
      "number",
      "int64"
    );

    res.live_ingested_bytes_agg_sum = ObjectSerializer.serialize(
      data.liveIngestedBytesAggSum,
      "number",
      "int64"
    );

    res.logs_by_retention = ObjectSerializer.serialize(
      data.logsByRetention,
      "LogsByRetention",
      ""
    );

    res.mobile_rum_session_count_agg_sum = ObjectSerializer.serialize(
      data.mobileRumSessionCountAggSum,
      "number",
      "int64"
    );

    res.mobile_rum_session_count_android_agg_sum = ObjectSerializer.serialize(
      data.mobileRumSessionCountAndroidAggSum,
      "number",
      "int64"
    );

    res.mobile_rum_session_count_ios_agg_sum = ObjectSerializer.serialize(
      data.mobileRumSessionCountIosAggSum,
      "number",
      "int64"
    );

    res.netflow_indexed_events_count_agg_sum = ObjectSerializer.serialize(
      data.netflowIndexedEventsCountAggSum,
      "number",
      "int64"
    );

    res.npm_host_top99p_sum = ObjectSerializer.serialize(
      data.npmHostTop99pSum,
      "number",
      "int64"
    );

    res.opentelemetry_host_top99p_sum = ObjectSerializer.serialize(
      data.opentelemetryHostTop99pSum,
      "number",
      "int64"
    );

    res.profiling_container_agent_count_avg = ObjectSerializer.serialize(
      data.profilingContainerAgentCountAvg,
      "number",
      "int64"
    );

    res.profiling_host_count_top99p_sum = ObjectSerializer.serialize(
      data.profilingHostCountTop99pSum,
      "number",
      "int64"
    );

    res.rehydrated_indexed_events_agg_sum = ObjectSerializer.serialize(
      data.rehydratedIndexedEventsAggSum,
      "number",
      "int64"
    );

    res.rehydrated_ingested_bytes_agg_sum = ObjectSerializer.serialize(
      data.rehydratedIngestedBytesAggSum,
      "number",
      "int64"
    );

    res.rum_session_count_agg_sum = ObjectSerializer.serialize(
      data.rumSessionCountAggSum,
      "number",
      "int64"
    );

    res.rum_total_session_count_agg_sum = ObjectSerializer.serialize(
      data.rumTotalSessionCountAggSum,
      "number",
      "int64"
    );

    res.start_date = ObjectSerializer.serialize(
      data.startDate,
      "Date",
      "date-time"
    );

    res.synthetics_browser_check_calls_count_agg_sum =
      ObjectSerializer.serialize(
        data.syntheticsBrowserCheckCallsCountAggSum,
        "number",
        "int64"
      );

    res.synthetics_check_calls_count_agg_sum = ObjectSerializer.serialize(
      data.syntheticsCheckCallsCountAggSum,
      "number",
      "int64"
    );

    res.trace_search_indexed_events_count_agg_sum = ObjectSerializer.serialize(
      data.traceSearchIndexedEventsCountAggSum,
      "number",
      "int64"
    );

    res.twol_ingested_events_bytes_agg_sum = ObjectSerializer.serialize(
      data.twolIngestedEventsBytesAggSum,
      "number",
      "int64"
    );

    res.usage = ObjectSerializer.serialize(
      data.usage,
      "Array<UsageSummaryDate>",
      ""
    );

    res.vsphere_host_top99p_sum = ObjectSerializer.serialize(
      data.vsphereHostTop99pSum,
      "number",
      "int64"
    );

    return res;
  }

  public constructor() {}
}
