/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Creator } from "./Creator";
import { MonitorOverallStates } from "./MonitorOverallStates";
import { MonitorSearchResultNotification } from "./MonitorSearchResultNotification";
import { MonitorType } from "./MonitorType";

export class MonitorSearchResult {
  /**
   * Classification of the monitor.
   */
  "classification"?: string;
  "creator"?: Creator;
  /**
   * ID of the monitor.
   */
  "id"?: number;
  /**
   * Latest timestamp the monitor triggered.
   */
  "lastTriggeredTs"?: number;
  /**
   * Metrics used by the monitor.
   */
  "metrics"?: Array<string>;
  /**
   * The monitor name.
   */
  "name"?: string;
  /**
   * The notification triggered by the monitor.
   */
  "notifications"?: Array<MonitorSearchResultNotification>;
  /**
   * The ID of the organization.
   */
  "orgId"?: number;
  /**
   * The monitor query.
   */
  "query"?: string;
  /**
   * The scope(s) to which the downtime applies, e.g. `host:app2`. Provide multiple scopes as a comma-separated list, e.g. `env:dev,env:prod`. The resulting downtime applies to sources that matches ALL provided scopes (i.e. `env:dev AND env:prod`), NOT any of them.
   */
  "scopes"?: Array<string>;
  "status"?: MonitorOverallStates;
  /**
   * Tags associated with the monitor.
   */
  "tags"?: Array<string>;
  "type"?: MonitorType;

  "unparsedObject"?: any;

  static readonly attributeTypeMap: {
    [key: string]: {
      baseName: string;
      type: string;
      required?: boolean;
      format?: string;
    };
  } = {
    classification: {
      baseName: "classification",
      type: "string",
    },
    creator: {
      baseName: "creator",
      type: "Creator",
    },
    id: {
      baseName: "id",
      type: "number",

      format: "int64",
    },
    lastTriggeredTs: {
      baseName: "last_triggered_ts",
      type: "number",

      format: "int64",
    },
    metrics: {
      baseName: "metrics",
      type: "Array<string>",
    },
    name: {
      baseName: "name",
      type: "string",
    },
    notifications: {
      baseName: "notifications",
      type: "Array<MonitorSearchResultNotification>",
    },
    orgId: {
      baseName: "org_id",
      type: "number",

      format: "int64",
    },
    query: {
      baseName: "query",
      type: "string",
    },
    scopes: {
      baseName: "scopes",
      type: "Array<string>",
    },
    status: {
      baseName: "status",
      type: "MonitorOverallStates",
    },
    tags: {
      baseName: "tags",
      type: "Array<string>",
    },
    type: {
      baseName: "type",
      type: "MonitorType",
    },
  };

  static getAttributeTypeMap() {
    return MonitorSearchResult.attributeTypeMap;
  }

  public constructor() {}
}
