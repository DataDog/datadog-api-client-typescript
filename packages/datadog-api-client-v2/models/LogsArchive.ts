/**
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2020-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LogsArchiveDefinition } from "./LogsArchiveDefinition";
import { ObjectSerializer } from "./ObjectSerializer";

/**
 * The logs archive.
 */

export class LogsArchive {
  "data"?: LogsArchiveDefinition;

  "unparsedObject"?: any;

  static readonly discriminator: string | undefined = undefined;

  static readonly attributeTypeMap: {
    [key: string]: { baseName: string; type: string; format: string };
  } = {
    data: {
      baseName: "data",
      type: "LogsArchiveDefinition",
      format: "",
    },
  };

  static getAttributeTypeMap() {
    return LogsArchive.attributeTypeMap;
  }

  static deserialize(data: { [key: string]: any }): LogsArchive {
    const res = new LogsArchive();

    res.data = ObjectSerializer.deserialize(
      data.data,
      "LogsArchiveDefinition",
      ""
    );

    return res;
  }

  static serialize(data: LogsArchive): { [key: string]: any } {
    const attributeTypes = LogsArchive.getAttributeTypeMap();
    const res: { [index: string]: any } = {};
    for (const [key, value] of Object.entries(data)) {
      if (!(key in attributeTypes)) {
        throw new TypeError(`${key} attribute not in schema`);
      }
    }
    if (data?.unparsedObject !== undefined) {
      return data.unparsedObject;
    }
    res.data = ObjectSerializer.serialize(
      data.data,
      "LogsArchiveDefinition",
      ""
    );

    return res;
  }

  public constructor() {}
}
