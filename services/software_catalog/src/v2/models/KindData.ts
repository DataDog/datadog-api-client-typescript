import { AttributeTypeMap } from "@datadog/datadog-api-client";

import { KindAttributes } from "./KindAttributes";
import { KindMetadata } from "./KindMetadata";

/**
 * Schema that defines the structure of a Kind object in the Software Catalog.
 */
export class KindData {
  /**
   * Kind attributes.
   */
  "attributes"?: KindAttributes;
  /**
   * A read-only globally unique identifier for the entity generated by Datadog.  User supplied values are ignored.
   */
  "id"?: string;
  /**
   * Kind metadata.
   */
  "meta"?: KindMetadata;
  /**
   * Kind.
   */
  "type"?: string;
  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  "additionalProperties"?: { [key: string]: any };
  /**
   * @ignore
   */
  "_unparsed"?: boolean;

  /**
   * @ignore
   */
  static readonly attributeTypeMap: AttributeTypeMap = {
    attributes: {
      baseName: "attributes",
      type: "KindAttributes",
    },
    id: {
      baseName: "id",
      type: "string",
    },
    meta: {
      baseName: "meta",
      type: "KindMetadata",
    },
    type: {
      baseName: "type",
      type: "string",
    },
    additionalProperties: {
      baseName: "additionalProperties",
      type: "{ [key: string]: any; }",
    },
  };

  /**
   * @ignore
   */
  static getAttributeTypeMap(): AttributeTypeMap {
    return KindData.attributeTypeMap;
  }

  public constructor() {}
}
