/**
 * {{ scenario.name|wordwrap(width=120, wrapstring="\n * ")}}
 */

import * as fs from "fs";
import { {{ version }} } from "@datadog/datadog-api-client";

const configuration = {{ version }}.createConfiguration();
{%- for operation in context._enable_operations %}
configuration.unstableOperations["{{ operation|untitle_case }}"] = true;
{%- endfor %}
const apiInstance = new {{ version }}.{{ context.api_instance.name }}Api(configuration);

{%- set response_has_three_values = context.status_code != 204 and context.api_response.content %}

{%- if context._given -%}
    {# Include 'from os import environ' used in given statements. #}
    {%- set given = context._imports["os"].add("environ") -%}
{%- endif -%}
{%- set parameters = format_parameters(context.api_request.kwargs, spec=operation_spec, replace_values=context._replace_values) %}
{%- if context.body %}
{%- set body = format_data_with_schema(context.body.value, context.api_request.schema.spec, replace_values=context._replace_values)%}
{%- endif %}
{%- set api_response_type = get_response_type(context.api_response, version)%}

{%- for name, values in context._given.items() %}

// {{ name|wordwrap(width=120, wrapstring="\n	// ") }}
{%- for value, schema in values.items()|sort %}
{%- if context._replace_values.is_used(value) %}
{%- if schema.type == 'string' %}
const {{ value }} = process.env.{{ value }} as string;
{%- elif schema.type == 'integer' %}
const {{ value }} = parseInt(process.env.{{ value }} as string);
{%- elif schema.type == 'boolean' %}
const {{ value }} = (process.env.{{ value }} == 'true');
{%- else %}
{{ 1/0 }}
{%- endif %}
{%- endif %}
{%- endfor %}

{% endfor %}

{%- set has_params = body or context.api_request.kwargs %}
{%- if has_params %}

const params: {{ version }}.{{ context.api_instance.name }}Api{{ context.api_request.name }}{{ context.api_request.operation_id }}Request = {
  {%- if body %}
  body: {{ body }},
  {%- endif %}
  {{ parameters }}
};
{%- endif %}

apiInstance
  .{{ context.api_request.operation_id|untitle_case }}({% if has_params %}params{% endif %})
  .then((data: {% if api_response_type %}{{ api_response_type }}{% else %}any{% endif %}) => {
    console.log("API called successfully. Returned data: " + JSON.stringify(data));
  })
  .catch((error: any) => console.error(error));
