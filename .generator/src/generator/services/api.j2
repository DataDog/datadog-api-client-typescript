import type { Configuration } from "../configuration";
import type { HttpFile, RequestContext, ResponseContext } from "../http/http";

{%- if imports %}
import { {{classname}} } from "..{{filename}}";
{%- endif %}
{%- if operations %}

export abstract class Abstract{{classname}}RequestFactory {
    {%- if operation %}
    public abstract {{nickname}}({%- if allParams %}{{paramName}}{%- if not required %}?{%- endif %}: {{ dataType }}, {%- endif %}options?: Configuration): Promise<RequestContext>;

    {%- endif %}
}


export abstract class Abstract{{classname}}ResponseProcessor {
    {%- if operation %}
     public abstract {{nickname}}(response: ResponseContext): Promise<{{ returnType }} {%- if not returnType %}void{%- endif %}>;

    {%- endif %}
}
{%- endif %}
